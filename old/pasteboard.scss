/* Hybrid Grid Columns */

// Generate Hybrid Grid Column Classes
.#{number-as-word($hybrid)}.colgrid .row {
	@for $i from 1 through $hybrid{
		@if $i == 1 {
			.one.column {
				width: columns($i, true);
			}
		}
		.#{number-as-word($i)}.columns{
			width: columns($i, true);
		}
	}
}

/* Hybrid Push and Pull Classes */

// Generate Hybrid Push Classes
.#{number-as-word($hybrid)}.colgrid .row {
  @for $i from 1 through $hybrid - 1{
    .push_#{number-as-word($i)} {
      margin-left: push_x($i, false, true);
        &:first-child {
        margin-left: push_x($i, true, true);
      }
    }
    .pull_#{number-as-word($i)} {
      // pull classes need to know the width of the container being pulled
      @for $j from 1 through $hybrid - 1 {
        @if $i + $j == $hybrid {
          &.#{number-as-word($j)}.columns {
            @extend %pull-100-percent;
          }
        }
        @elseif $j == 1 {
          &.one.column {
            margin-left: pull_x($i, $j, true);
            &:first-child {
              @extend %zero-margin-left;
            }
          }
        }
        @else {
          &.#{number-as-word($j)}.columns {
            margin-left: pull_x($i, $j, true);
            &:first-child {
              @extend %zero-margin-left;
            }
          }
        }
      }
    }
  }
}


/* Hybrid Centered Classes */

// Generate Centered Classes
.#{number-as-word($hybrid)}.colgrid .row {
	@for $i from 1 through $hybrid - 1 {
		.#{number-as-word($i)}.centered {
			margin-left: centered($i, true);
		}
	}
}
